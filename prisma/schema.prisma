// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String           @id @default(cuid())
  name           String?
  email          String?          @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  favoriteIds    String[]
  accounts       Account[]
  listings       Listing[]
  forumQuestions ForumQuestions[]
  simulations    Simulation[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Listing {
  id            String   @id @default(cuid())
  title         String
  description   String
  imageSrc      String
  createdAt     DateTime @default(now())
  category      String
  guestCount    Int
  locationValue String
  userId        String
  price         Int
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  SimulationListings SimulationListings[]
}

model ForumQuestions {
  id String @id @default(cuid())

  question String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Simulation {
  id          String   @id @default(cuid())
  title       String
  description String
  userId      String
  createdAt   DateTime @default(now())

  user               User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  SimulationListings SimulationListings[]
}

model SimulationListings {
  id           String   @id @default(cuid())
  listingId    String
  simulationId String
  listeingQty  Int
  startDate    DateTime
  endDate      DateTime

  listing    Listing    @relation(fields: [listingId], references: [id], onDelete: Cascade)
  simulation Simulation @relation(fields: [simulationId], references: [id], onDelete: Cascade)
}
